OLDFILES
Robert L Parker rlp1938@gmail.com
%%mtime(%Y/%m/%d)

= NAME =
**oldfiles** - Generate a list of oldfiles to //stdout//.


= SYNOPSIS =
**oldfiles** [option] [''head directory''].
If not input the default directory is the user's home directory.

= DESCRIPTION =
**oldfiles** recurses the head directory and lists old files on
//stdout//. Errors, including broken symlinks are sent to //stderr//.

A symlink pointing to an old file will cause both the link and the old
file to be listed even if that target file is outside the search path.
However if a file in the search path is old but it is symlinked from
outside the search path, that symlink will be left dangling if that old
file is deleted.

In typical use, a list of old files would be split into two files, one
for deletion using //zapfiles// and one to have the file dates renewed
using //setfiletime//.

= OPTIONS =

:  **-h**
print help information and exit.

:  **-a N [modifier]**
sets the age of old files to be N periods. The modifier is one of d|D
days, m|M months or y|Y years. If no modifier is set the period is
years. If the option is not used the default age is 3 years.

:  **-o yyyymmdd[hh[mm]]**
sets the age of the files to select to be the input date.


= EXAMPLES =
//oldfiles// ~ > oldies

//oldfiles// ~ > oldies 2> broken


= SEE ALSO =
**bigfiles**(1), **brokebsym**(1), **duplicates**(1),
**delemptydir**(1), **processdups**(1), **setfiletime**(1),
**zapfiles**(1), for a brief overview see **cleanuputils**(1).
